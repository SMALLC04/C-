1.	变量的定义
变量是一个保存数据的地方，当我们需要在程序力保存数据时，就需要一个变量来保存它。用变量保存数据后，才可以在之后的函数中就调用它。变量可以说是存放可变数据的可命名的区域。
For instance： int price = 0;
2.	变量一般形式
 “类型名称” “变量名称”
3.	变量名字
变量需要一个名字，这个名字被称作“标识符”，用于之后函数调用所用。
构造原则：只能用字母，数字和下划线组成；一般数字不能放在首位；C语言中的关键字不能用作标识符。
4.	变量赋值和初始化
初始化：定义每一个变量的同时需要对它进行初始化，使用=进行赋值。
  Int price = 0;
利用等号将右边的0赋值给左边的price
赋值：计算机语言中的等号不同于数学中的等号，计算机语言中的等号是一个动作，要求将b的值赋予给a（a = b）
5.	变量类型声明
每一个变量赋值前都需要有定义声明，需要确定其数据类型，变量中只能存放相对应的数据，并且在程序运行时无法修改变量的类型。
注意：
ANSI C中只能在代码的开头去定义变量
6.	输入函数scanf(“%d”,&name)的使用：
要求scanf这个函数读取用户输入的数据，并将该值赋予到name变量中。
与python程序语言不同的是，变量名前的&不能忘。
7.	常量：定义的不可变化的量，称作直接量（常量）
变量的常量化：（const是修饰符）const NAME = 0；（直接量的标识符大写）
字符常量：一个字符常量就是一个整数，书写时将一个字符放在一个单引号内，表示的数为字符在ASCII字符集内各符号的值。字符常量一般用来与其他字符作比较，用作判断的标准。
常见的转义字符（之后章节详细说明）
常量表达式：只有常量的表达式，其运算过程在编译的时候完成，而不是在运行的时候完成。常见的有变量的声明
8.	利用scanf（）输入多个值（这在python中很难办到）
实例：plus.c
Int a;
Int b;
Printf(“请输入两个数：“)；
Scanf(“%d %d”, &a, &b);
Printf(“%d + %d =%d/n”, &a, &b, &a+b)
9.	数据类型
Int 整数类型
%d 整数类型字符串
doubt（双浮点数类型） 用来表示浮点数类型，float（当浮点数类型）也可以
%f 浮点数标准字符串
Char 字符型
数据类型前的限定符（了解）
（1）	short和long：提供满足需要的不同长度的整型，short和int至少16位，long至少32位，并且short不能高于int，int不能高于long
（2）	类型限定符signed和unsigned用于限定char类型和int类型，unsigned限定的数为正数或0
（3）	Long double 高精度双位浮点数
10.	运算符
（1）	算数运算符                                                                                     函数中的运算表达式由算子和运算符组成，算子指参与运算的值，可以是变量也可以是常数，某方法的返回值；运算符是指运算的动作。
常见的运算符：
+/-（表示该数值的正负号），*，/，%（取余），+，-，=
（2）	关系运算符:判断两个变量的关系
<, <=, >, >=, ==, !=
（3）	逻辑运算符
&& 和AND（全部条件都成立输出真，否则输出假）；
||  或OR（有一个条件成立输出真，否则输出假）
11.	数据类型转换
当表达式中一个运算符连接的几个算子数据类型不同时，就需要转化为相同类型。
12.	自增运算符（++）和自减运算符（--）
自增运算符（++）：使变量数值递增1
自减运算符（--）：使变量数值递减1
辨别++a与a++的不同：
++a表示先进行递增再进行赋值，a++表示先进行赋值再进行递增
Int n = 1;
X = ++n;
M = n++;
程序运行完成后X的值为2，M的值为1，两个n的值全为2
